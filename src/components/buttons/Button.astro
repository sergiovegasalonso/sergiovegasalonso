---
const { id, text } = Astro.props;
---

<button
  id={id}
  class="flex cursor-pointer border border-2 border-(--border-color) p-1 shadow-(--shadow-sm)"
>
  <slot />
  <span class="hidden lg:inline lg:ml-2">{text}</span>
</button>

<script define:vars={{ id }}>
  const downloadButton = document.getElementById(id);

  downloadButton?.addEventListener("mousedown", () => onMouseDown());

  downloadButton?.addEventListener("touchstart", () => onMouseDown());

  downloadButton?.addEventListener("mouseup", () => onMouseUpOrLeave());

  downloadButton?.addEventListener("touchend", () => onMouseUpOrLeave());

  downloadButton?.addEventListener("mouseleave", () => onMouseUpOrLeave());

  downloadButton?.addEventListener("touchcancel", () => onMouseUpOrLeave());

  function onMouseDown() {
    downloadButton?.classList.add(
      "transform-(--button-translation-on-clicking)",
    );
    downloadButton?.classList.remove("shadow-(--shadow-sm)");
  }

  function onMouseUpOrLeave() {
    downloadButton?.classList.remove(
      "transform-(--button-translation-on-clicking)",
    );
    downloadButton?.classList.add("shadow-(--shadow-sm)");
  }
</script>
